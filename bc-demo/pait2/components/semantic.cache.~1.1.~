;; Object components/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "components/"
  :tables (list 
   (semanticdb-table "welcomeScreen.inc"
    :major-mode 'php-mode
    :tags '(("$body" variable (:type ("global" type (:type "class") nil nil)) nil [55 88]) ("$login" variable (:type ("global" type (:type "class") nil nil)) nil [55 88]) ("$self" variable (:type ("global" type (:type "class") nil nil)) nil [55 88]) ("$db" variable (:type ("global" type (:type "class") nil nil)) nil [55 88]) ("$sql" variable (:default-value "\"select name, companyID from companies\"" :type "int") nil [89 136]) ("query" function (:prototype-flag t :arguments (("" variable (:type ("$sql" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148 153])) :type "int") nil [142 154]) ("$array" variable (:default-value "array()" :type "int") nil [155 172]) ("$sql2" variable (:default-value "\"select name, saveID from savedsearches\"" :type "int") nil [257 306]) ("query" function (:prototype-flag t :arguments (("" variable (:type ("$sql2" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [318 324])) :type "int") nil [312 325]) ("$array2" variable (:default-value "array()" :type "int") nil [326 344]) ("$sql3" variable (:default-value "\"select p.*, u.gn as gn, u.sn as sn, u.email as email from pendinguploads as p, users as u where p.uploadedBy = u.username order by p.time DESC\"" :type "int") nil [424 577]) ("query" function (:prototype-flag t :arguments (("" variable (:type ("$sql3" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [589 595])) :type "int") nil [583 596]) ("$array3" variable (:default-value "array()" :type "int") nil [597 615]) ("$sql4" variable (:default-value "\"select r.*, c.name as companyName, p.name as carrierName from rawdatatoc as r, carriers as p, companies as c where r.status > -1 AND r.companyID = c.companyID AND r.carrierID = p.carrierID ORDER BY r.time DESC\"" :type "int") nil [690 910]) ("query" function (:prototype-flag t :arguments (("" variable (:type ("$sql4" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [922 928])) :type "int") nil [916 929]) ("$array4" variable (:default-value "array()" :type "int") nil [930 948]) ("$personStatus" variable (:type ("global" type (:type "class") nil nil)) nil [1025 1076]) ("$uploadPath" variable (:type ("global" type (:type "class") nil nil)) nil [1025 1076]) ("$uploadStatuses" variable (:type ("global" type (:type "class") nil nil)) nil [1025 1076]) ("set" function (:prototype-flag t :arguments (("" variable (:type ("$array" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1496 1503])) :type "int") nil [1477 1504]) ("set" function (:prototype-flag t :arguments (("" variable (:type ("$array2" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1539 1547])) :type "int") nil [1523 1548]) ("set" function (:prototype-flag t :arguments (("" variable (:type ("$uploadPath" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1585 1597])) :type "int") nil [1567 1598]) ("set" function (:prototype-flag t :arguments (("" variable (:type ("$array3" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1635 1643])) :type "int") nil [1617 1644]) ("set" function (:prototype-flag t :arguments (("" variable (:type ("$array4" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1681 1689])) :type "int") nil [1663 1690]) ("set" function (:prototype-flag t :arguments (("" variable (:type ("$uploadStatuses" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1729 1745])) :type "int") nil [1709 1746]) ("set" function (:prototype-flag t :arguments (("" variable (:type ("$personStatus" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1783 1797])) :type "int") nil [1765 1798]) ("set" function (:prototype-flag t :arguments (("" variable (:type ("$login" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1829 1836]) ("" variable (:type ("user" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1837 1842])) :type "int") nil [1817 1843]) ("set" function (:prototype-flag t :arguments (("" variable (:type ("$self" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1874 1880])) :type "int") nil [1862 1881]) ("parse" function (:prototype-flag t :type "int") nil [1908 1916]))
    :file "welcomeScreen.inc"
    :pointmax 1919
    )
   )
  :file "semantic.cache"
  :semantic-tag-version "2.0pre3"
  :semanticdb-version "2.0pre3"
  )
